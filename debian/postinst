#!/bin/sh
# postinst script for ocemr
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

reload_apache()
{
    if apache2ctl configtest 2>/dev/null; then
        invoke-rc.d apache2 force-reload || true
    else
        echo "Your apache2 configuration is broken, so we're not restarting it for you."
    fi
}
check_enable_apache_conf()
{
    if [ -z ${1} ]; then
	echo "Error: must pass a module name to check_enable_apache_conf()"
	return 2
    fi
    CONF=${1}
    if [ -e /etc/apache2/conf-enabled/${CONF}.conf ]; then
	#already enabled, silently return true
	return 0
    elif [ -e /etc/apache2/conf-available/${CONF}.conf ]; then
	# present but not enabled, enable it
	a2enconf ${CONF}
	return 0
    else
	# not present, Error out loud
	echo "Error: check_enable_apache_conf() tried to enable module that does not exist."
	echo "        ${CONF}"
	return 3
    fi
}
check_enable_apache_mod()
{
    if [ -z ${1} ]; then
	echo "Error: must pass a module name to check_enable_apache_mod()"
	return 2
    fi
    MOD=${1}
    if [ -e /etc/apache2/mods-enabled/${MOD}.conf ]; then
	#already enabled, silently return true
	return 0
    elif [ -e /etc/apache2/mods-available/${MOD}.conf ]; then
	# present but not enabled, enable it
	a2enmod ${MOD}
	return 0
    else
	# not present, Error out loud
	echo "Error: check_enable_apache_mod() tried to enable module that does not exist."
	echo "        ${MOD}"
	return 3
    fi
}
check_enable_apache_site()
{
    if [ -z ${1} ]; then
	echo "Error: must pass a module name to check_enable_apache_site()"
	return 2
    fi
    SITE=${1}
    if [ -e /etc/apache2/sites-enabled/${SITE}.conf ]; then
	#already enabled, silently return true
	return 0
    elif [ -e /etc/apache2/sites-available/${SITE}.conf ]; then
	# present but not enabled, enable it
	a2ensite ${SITE}
	return 0
    else
	# not present, Error out loud
	echo "Error: check_enable_apache_site() tried to enable module that does not exist."
	echo "        ${SITE}"
	return 3
    fi
}

case "$1" in
    configure)
	echo "========= POSTINST: `date`" >> /var/log/ocemr/update.log
	chmod 750 /var/lib/ocemr/db /var/lib/ocemr/backups
	chmod 700 /var/lib/ocemr/gnupg
	if [ ! -e /var/lib/ocemr/gnupg/secring.gpg ]; then
		echo "Warning: GPG Server Key doesn't exist. see settings.py for more info."
	fi

	#initialize a default db if one does not exist
	/usr/share/ocemr/util/initialize_sqlite_db.sh 2>&1 | tee -a  /var/log/ocemr/update.log || true

	echo "python ./manage.py migrate --noinput" >> /var/log/ocemr/update.log
        PYTHONPATH=/usr/share/ocemr/apps/ python /usr/share/ocemr/apps/ocemr/manage.py migrate --noinput 2>&1 \
		| tee -a /var/log/ocemr/update.log || true

	#TODO: W: ocemr: maintainer-script-should-not-use-recursive-chown-or-chmod postinst:108
	chown -R www-data:www-data /var/lib/ocemr/*

	check_enable_apache_mod "alias"
	check_enable_apache_mod "wsgi"
	check_enable_apache_conf "ocemr"
	check_enable_apache_site "ocemr"
	reload_apache
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
